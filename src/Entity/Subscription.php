<?php
/**
 * @license   http://opensource.org/licenses/BSD-3-Clause BSD-3-Clause
 * @copyright Copyright (c) 2015 Julien Guittard (http://julienguittard.com)
 */

namespace Zoho\Subscriptions\Entity;

/**
 * Class Subscription
 *
 * @package Zoho\Subscriptions\Entity
 */
class Subscription implements EntityInterface
{
    use StatusTrait;
    use TimestampableTrait;

    /**
     * Unique ID generated for a subscription.
     *
     * @var string
     */
    protected $subscriptionId;

    /**
     * Name generated by concatenation of the product name and the selected plan.
     *
     * @var string
     */
    protected $name;

    /**
     * Customer object of the customer for whom you want to create a subscription.
     *
     * @var Customer
     */
    protected $customer;

    /**
     * List of contact person objects
     *
     * @var array
     */
    protected $contactpersons;

    /**
     * The amount that needs to be charged for the subscription.
     *
     * @var float
     */
    protected $amount;

    /**
     * Product ID of the product to which the plan is associated with.
     *
     * @var string
     */
    protected $productId;

    /**
     * Plan object for which the subscription is to be created.
     *
     * @var Plan
     */
    protected $plan;

    /**
     * List of addon objects which are to be included in the subscription.
     *
     * @var array
     */
    protected $addons;

    /**
     * The object containing the details of the added coupon.
     *
     * @var Coupon
     */
    protected $coupon;

    /**
     * List of Custom Field values created for a customer.
     *
     * @var array
     */
    protected $customFields;

    /**
     * The date on which the trial starts.
     *
     * @var string
     */
    protected $trialStartsAt;

    /**
     * The date on which the trial ends.
     *
     * @var string
     */
    protected $trialEndsAt;

    /**
     * A subscription is activated after the first customer payment is received.
     *
     * @var string
     */
    protected $activatedAt;

    /**
     * A string of your choice is required to easily identify and keep track of your subscriptions.
     *
     * @var string
     */
    protected $referenceId;

    /**
     * Customer’s currency code.
     *
     * @var string
     */
    protected $currencyCode;

    /**
     * Customer’s currency symbol.
     *
     * @var string
     */
    protected $currencySymbol;

    /**
     * This will be the exchange rate provided for the organization’s currency and the customer’s currency.
     * The subscription fee would be the multiplicative product of the original price and the exchange rate.
     *
     * @var float
     */
    protected $exchangeRate;

    /**
     * Generally the subscription will start on the day it is created, but if you want to start the
     * subscription on a specific date then the date can be provided. The subscription status would be future
     * till the starts_at date.
     *
     * @var string
     */
    protected $startsAt;

    /**
     * Set to true for charging customer’s card automatically.
     *
     * @var boolean
     */
    protected $autoCollect;

    /**
     * Sales person id of the sales person needs to be associated with the subscriptions.
     *
     * @var string
     */
    protected $salesPersonId;

    /**
     * The name of the sales person who need to be associated with the subscription.
     *
     * @var string
     */
    protected $salesPersonName;

    /**
     * Customer’s card object.
     *
     * @var Card
     */
    protected $card;

    /**
     * Invoice ID of the most recent invoice to which the subscription is associated with.
     *
     * @var string
     */
    protected $childInvoiceId;

    /**
     * Indicates the number of intervals between each billing. If interval=2, the customer
     * would be billed every two months or years depending on the value for interval_unit.
     *
     * @var string
     */
    protected $interval;

    /**
     * It can be either months or years. For interval=2 and interval_unit=months, the customer
     * is billed every two months.
     *
     * @var string
     */
    protected $intervalUnit;

    /**
     * Date on which the current term of the subscription started.
     *
     * @var string
     */
    protected $currentTermStartsAt;

    /**
     * Date on which the current term of the subscription ends.
     *
     * @var string
     */
    protected $currentTermEndsAt;

    /**
     * This is applicable only when billing_cycle is set for a plan. A subscription expires
     * on the last day of the last billing cycle.
     *
     * @var string
     */
    protected $expiresAt;

    /**
     * The date on which the customer was billed last.
     *
     * @var string
     */
    protected $lastBillingAt;

    /**
     * The date on which the customer will be billed next. This will also be the date on which
     * the next term of the subscription starts.
     *
     * @var string
     */
    protected $nextBillingAt;

    /**
     * The date on which a subscription is cancelled. Customers can cancel a subscription themselves.
     * It can also be cancelled if a customer’s card couldn’t be charged even after multiple attempts.
     *
     * @var string
     */
    protected $cancelledAt;

    /**
     * This is applicable only when a subscription is cancelled. It is set to user when customers cancel
     * the subscription themselves. It is set to scheduler if it gets cancelled by the customer due to
     * payment failures during renewal.
     *
     * @var string
     */
    protected $source;

    /**
     * If payment fails at the time of renewing a subscription, there will be another attempt made to process
     * at a later *date* which is to be specified here.
     *
     * @var string
     */
    protected $nextRetryAt;

    /**
     * List of note objects
     *
     * @var array
     */
    protected $notes;

    /**
     * Get the subscriptionId
     *
     * @return string
     */
    public function getSubscriptionId()
    {
        return $this->subscriptionId;
    }

    /**
     * Set the subscriptionId
     *
     * @param string $subscriptionId
     * @return Subscription
     */
    public function setSubscriptionId($subscriptionId)
    {
        $this->subscriptionId = $subscriptionId;
        return $this;
    }

    /**
     * Get the name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set the name
     *
     * @param string $name
     * @return Subscription
     */
    public function setName($name)
    {
        $this->name = $name;
        return $this;
    }

    /**
     * Get the customer
     *
     * @return Customer
     */
    public function getCustomer()
    {
        return $this->customer;
    }

    /**
     * Set the customer
     *
     * @param Customer $customer
     * @return Subscription
     */
    public function setCustomer(Customer $customer)
    {
        $this->customer = $customer;
        return $this;
    }

    /**
     * Get the contactpersons
     *
     * @return array
     */
    public function getContactpersons()
    {
        return $this->contactpersons;
    }

    /**
     * Set the contactpersons
     *
     * @param array $contactpersons
     * @return Subscription
     */
    public function setContactpersons(array $contactpersons)
    {
        $this->contactpersons = $contactpersons;
        return $this;
    }

    /**
     * Get the amount
     *
     * @return float
     */
    public function getAmount()
    {
        return $this->amount;
    }

    /**
     * Set the amount
     *
     * @param float $amount
     * @return Subscription
     */
    public function setAmount($amount)
    {
        $this->amount = $amount;
        return $this;
    }

    /**
     * Get the productId
     *
     * @return string
     */
    public function getProductId()
    {
        return $this->productId;
    }

    /**
     * Set the productId
     *
     * @param string $productId
     * @return Subscription
     */
    public function setProductId($productId)
    {
        $this->productId = $productId;
        return $this;
    }

    /**
     * Get the plan
     *
     * @return Plan
     */
    public function getPlan()
    {
        return $this->plan;
    }

    /**
     * Set the plan
     *
     * @param Plan $plan
     * @return Subscription
     */
    public function setPlan(Plan $plan)
    {
        $this->plan = $plan;
        return $this;
    }

    /**
     * Get the addons
     *
     * @return array
     */
    public function getAddons()
    {
        return $this->addons;
    }

    /**
     * Set the addons
     *
     * @param array $addons
     * @return Subscription
     */
    public function setAddons(array $addons)
    {
        $this->addons = $addons;
        return $this;
    }

    /**
     * Get the coupon
     *
     * @return Coupon
     */
    public function getCoupon()
    {
        return $this->coupon;
    }

    /**
     * Set the coupon
     *
     * @param Coupon $coupon
     * @return Subscription
     */
    public function setCoupon(Coupon $coupon)
    {
        $this->coupon = $coupon;
        return $this;
    }

    /**
     * Get the customFields
     *
     * @return array
     */
    public function getCustomFields()
    {
        return $this->customFields;
    }

    /**
     * Set the customFields
     *
     * @param array $customFields
     * @return Subscription
     */
    public function setCustomFields(array $customFields)
    {
        $this->customFields = $customFields;
        return $this;
    }

    /**
     * Get the trialStartsAt
     *
     * @return string
     */
    public function getTrialStartsAt()
    {
        return $this->trialStartsAt;
    }

    /**
     * Set the trialStartsAt
     *
     * @param string $trialStartsAt
     * @return Subscription
     */
    public function setTrialStartsAt($trialStartsAt)
    {
        $this->trialStartsAt = $trialStartsAt;
        return $this;
    }

    /**
     * Get the trialEndsAt
     *
     * @return string
     */
    public function getTrialEndsAt()
    {
        return $this->trialEndsAt;
    }

    /**
     * Set the trialEndsAt
     *
     * @param string $trialEndsAt
     * @return Subscription
     */
    public function setTrialEndsAt($trialEndsAt)
    {
        $this->trialEndsAt = $trialEndsAt;
        return $this;
    }

    /**
     * Get the activatedAt
     *
     * @return string
     */
    public function getActivatedAt()
    {
        return $this->activatedAt;
    }

    /**
     * Set the activatedAt
     *
     * @param string $activatedAt
     * @return Subscription
     */
    public function setActivatedAt($activatedAt)
    {
        $this->activatedAt = $activatedAt;
        return $this;
    }

    /**
     * Get the referenceId
     *
     * @return string
     */
    public function getReferenceId()
    {
        return $this->referenceId;
    }

    /**
     * Set the referenceId
     *
     * @param string $referenceId
     * @return Subscription
     */
    public function setReferenceId($referenceId)
    {
        $this->referenceId = $referenceId;
        return $this;
    }

    /**
     * Get the currencyCode
     *
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->currencyCode;
    }

    /**
     * Set the currencyCode
     *
     * @param string $currencyCode
     * @return Subscription
     */
    public function setCurrencyCode($currencyCode)
    {
        $this->currencyCode = $currencyCode;
        return $this;
    }

    /**
     * Get the currencySymbol
     *
     * @return string
     */
    public function getCurrencySymbol()
    {
        return $this->currencySymbol;
    }

    /**
     * Set the currencySymbol
     *
     * @param string $currencySymbol
     * @return Subscription
     */
    public function setCurrencySymbol($currencySymbol)
    {
        $this->currencySymbol = $currencySymbol;
        return $this;
    }

    /**
     * Get the exchangeRate
     *
     * @return float
     */
    public function getExchangeRate()
    {
        return $this->exchangeRate;
    }

    /**
     * Set the exchangeRate
     *
     * @param float $exchangeRate
     * @return Subscription
     */
    public function setExchangeRate(float $exchangeRate)
    {
        $this->exchangeRate = $exchangeRate;
        return $this;
    }

    /**
     * Get the startsAt
     *
     * @return string
     */
    public function getStartsAt()
    {
        return $this->startsAt;
    }

    /**
     * Set the startsAt
     *
     * @param string $startsAt
     * @return Subscription
     */
    public function setStartsAt($startsAt)
    {
        $this->startsAt = $startsAt;
        return $this;
    }

    /**
     * Get the autoCollect
     *
     * @return boolean
     */
    public function isAutoCollect()
    {
        return $this->autoCollect;
    }

    /**
     * Set the autoCollect
     *
     * @param boolean $autoCollect
     * @return Subscription
     */
    public function setAutoCollect($autoCollect)
    {
        $this->autoCollect = $autoCollect;
        return $this;
    }

    /**
     * Get the salesPersonId
     *
     * @return string
     */
    public function getSalesPersonId()
    {
        return $this->salesPersonId;
    }

    /**
     * Set the salesPersonId
     *
     * @param string $salesPersonId
     * @return Subscription
     */
    public function setSalesPersonId($salesPersonId)
    {
        $this->salesPersonId = $salesPersonId;
        return $this;
    }

    /**
     * Get the salesPersonName
     *
     * @return string
     */
    public function getSalesPersonName()
    {
        return $this->salesPersonName;
    }

    /**
     * Set the salesPersonName
     *
     * @param string $salesPersonName
     * @return Subscription
     */
    public function setSalesPersonName($salesPersonName)
    {
        $this->salesPersonName = $salesPersonName;
        return $this;
    }

    /**
     * Get the card
     *
     * @return Card
     */
    public function getCard()
    {
        return $this->card;
    }

    /**
     * Set the card
     *
     * @param Card $card
     * @return Subscription
     */
    public function setCard(Card $card)
    {
        $this->card = $card;
        return $this;
    }

    /**
     * Get the childInvoiceId
     *
     * @return string
     */
    public function getChildInvoiceId()
    {
        return $this->childInvoiceId;
    }

    /**
     * Set the childInvoiceId
     *
     * @param string $childInvoiceId
     * @return Subscription
     */
    public function setChildInvoiceId($childInvoiceId)
    {
        $this->childInvoiceId = $childInvoiceId;
        return $this;
    }

    /**
     * Get the interval
     *
     * @return string
     */
    public function getInterval()
    {
        return $this->interval;
    }

    /**
     * Set the interval
     *
     * @param string $interval
     * @return Subscription
     */
    public function setInterval($interval)
    {
        $this->interval = $interval;
        return $this;
    }

    /**
     * Get the intervalUnit
     *
     * @return string
     */
    public function getIntervalUnit()
    {
        return $this->intervalUnit;
    }

    /**
     * Set the intervalUnit
     *
     * @param string $intervalUnit
     * @return Subscription
     */
    public function setIntervalUnit($intervalUnit)
    {
        $this->intervalUnit = $intervalUnit;
        return $this;
    }

    /**
     * Get the currentTermStartsAt
     *
     * @return string
     */
    public function getCurrentTermStartsAt()
    {
        return $this->currentTermStartsAt;
    }

    /**
     * Set the currentTermStartsAt
     *
     * @param string $currentTermStartsAt
     * @return Subscription
     */
    public function setCurrentTermStartsAt($currentTermStartsAt)
    {
        $this->currentTermStartsAt = $currentTermStartsAt;
        return $this;
    }

    /**
     * Get the currentTermEndsAt
     *
     * @return string
     */
    public function getCurrentTermEndsAt()
    {
        return $this->currentTermEndsAt;
    }

    /**
     * Set the currentTermEndsAt
     *
     * @param string $currentTermEndsAt
     * @return Subscription
     */
    public function setCurrentTermEndsAt($currentTermEndsAt)
    {
        $this->currentTermEndsAt = $currentTermEndsAt;
        return $this;
    }

    /**
     * Get the expiresAt
     *
     * @return string
     */
    public function getExpiresAt()
    {
        return $this->expiresAt;
    }

    /**
     * Set the expiresAt
     *
     * @param string $expiresAt
     * @return Subscription
     */
    public function setExpiresAt($expiresAt)
    {
        $this->expiresAt = $expiresAt;
        return $this;
    }

    /**
     * Get the lastBillingAt
     *
     * @return string
     */
    public function getLastBillingAt()
    {
        return $this->lastBillingAt;
    }

    /**
     * Set the lastBillingAt
     *
     * @param string $lastBillingAt
     * @return Subscription
     */
    public function setLastBillingAt($lastBillingAt)
    {
        $this->lastBillingAt = $lastBillingAt;
        return $this;
    }

    /**
     * Get the nextBillingAt
     *
     * @return string
     */
    public function getNextBillingAt()
    {
        return $this->nextBillingAt;
    }

    /**
     * Set the nextBillingAt
     *
     * @param string $nextBillingAt
     * @return Subscription
     */
    public function setNextBillingAt($nextBillingAt)
    {
        $this->nextBillingAt = $nextBillingAt;
        return $this;
    }

    /**
     * Get the cancelledAt
     *
     * @return string
     */
    public function getCancelledAt()
    {
        return $this->cancelledAt;
    }

    /**
     * Set the cancelledAt
     *
     * @param string $cancelledAt
     * @return Subscription
     */
    public function setCancelledAt($cancelledAt)
    {
        $this->cancelledAt = $cancelledAt;
        return $this;
    }

    /**
     * Get the source
     *
     * @return string
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * Set the source
     *
     * @param string $source
     * @return Subscription
     */
    public function setSource($source)
    {
        $this->source = $source;
        return $this;
    }

    /**
     * Get the nextRetryAt
     *
     * @return string
     */
    public function getNextRetryAt()
    {
        return $this->nextRetryAt;
    }

    /**
     * Set the nextRetryAt
     *
     * @param string $nextRetryAt
     * @return Subscription
     */
    public function setNextRetryAt($nextRetryAt)
    {
        $this->nextRetryAt = $nextRetryAt;
        return $this;
    }

    /**
     * Get the notes
     *
     * @return array
     */
    public function getNotes()
    {
        return $this->notes;
    }

    /**
     * Set the notes
     *
     * @param array $notes
     * @return Subscription
     */
    public function setNotes(array $notes)
    {
        $this->notes = $notes;
        return $this;
    }
    
}