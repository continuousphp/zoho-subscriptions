<?php
/**
 * @license   http://opensource.org/licenses/BSD-3-Clause BSD-3-Clause
 * @copyright Copyright (c) 2015 Julien Guittard (http://julienguittard.com)
 */

namespace Zoho\Subscriptions\Entity;

use Zend\InputFilter\InputFilterAwareInterface;
use Zend\InputFilter\InputFilterAwareTrait;

/**
 * Class Customer
 *
 * @package Zoho\Subscriptions\Entity
 */
class Customer implements InputFilterAwareInterface, EntityInterface
{
    use TimestampableTrait;
    use InputFilterAwareTrait;
    use StatusTrait;

    /**
     * Unique ID generated by the server. This is used as identifier.
     *
     * @var string
     */
    protected $customerId;

    /**
     * Name of the customer which will be displayed in the interface and invoices.
     *
     * @var string
     */
    protected $displayName;

    /**
     * First name of the customer.
     *
     * @var string
     */
    protected $firstName;

    /**
     * Last name of the customer.
     *
     * @var string
     */
    protected $lastName;

    /**
     * Email address of the customer.
     *
     * @var string
     */
    protected $email;

    /**
     * Registered name of the company the customer represents.
     *
     * @var string
     */
    protected $companyName;

    /**
     * Customer’s landline or fixed-line number.
     *
     * @var string
     */
    protected $phone;

    /**
     * Customer’s mobile phone number.
     *
     * @var string
     */
    protected $mobile;

    /**
     * Customer’s website URL.
     *
     * @var string
     */
    protected $website;

    /**
     * Customer’s billing address.
     *
     * @var Address
     */
    protected $billingAddress;

    /**
     * Customer’s shipping address.
     *
     * @var Address
     */
    protected $shippingAddress;

    /**
     * Currency code of the currency in which the customer wants to pay.
     *
     * @var string
     */
    protected $currencyCode;

    /**
     * Currency symbol of the customer’s currency.
     *
     * @var string
     */
    protected $currencySymbol;

    /**
     * Currency ID of the customer’s currency.
     *
     * @var string
     */
    protected $currencyId;

    /**
     * The Price Precision of the selected currency for the customer.
     *
     * @var integer
     */
    protected $pricePrecision;

    /**
     * Customer’s unused credits.
     *
     * @var float
     */
    protected $unusedCredits;

    /**
     *  Amount the customer still has to pay.
     *
     * @var float
     */
    protected $balance;

    /**
     * Amount that has to be paid to the customer.
     *
     * @var float
     */
    protected $outstanding;

    /**
     * A short note about the customer.
     *
     * @var string
     */
    protected $notes;

    /**
     * List of Custom Field values created for a customer.
     *
     * @var array
     */
    protected $customFields;

    /**
     * This is the Zoho CRM account id of the customer if the customer is synced with the accounts in Zoho CRM.
     *
     * @var string
     */
    protected $zcrmAccountId;

    /**
     * This is the Zoho CRM contact id of the customer if the customer is synced with the contacts in Zoho CRM.
     *
     * @var string
     */
    protected $zcrmContactId;

    /**
     * Get the customer ID
     *
     * @return string
     */
    public function getCustomerId()
    {
        return $this->customerId;
    }

    /**
     * Set the customer ID
     *
     * @param string $customerId
     * @return Customer
     */
    public function setCustomerId($customerId)
    {
        $this->customerId = $customerId;
        return $this;
    }

    /**
     * Get the display name
     *
     * @return string
     */
    public function getDisplayName()
    {
        return $this->displayName;
    }

    /**
     * Set the display name
     *
     * @param string $displayName
     * @return Customer
     */
    public function setDisplayName($displayName)
    {
        $this->displayName = $displayName;
        return $this;
    }

    /**
     * Get the first name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->firstName;
    }

    /**
     * Set the first name
     *
     * @param string $firstName
     * @return Customer
     */
    public function setFirstName($firstName)
    {
        $this->firstName = $firstName;
        return $this;
    }

    /**
     * Get the last name
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->lastName;
    }

    /**
     * Set the last name
     *
     * @param string $lastName
     * @return Customer
     */
    public function setLastName($lastName)
    {
        $this->lastName = $lastName;
        return $this;
    }

    /**
     * Get the email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set the email
     *
     * @param string $email
     * @return Customer
     */
    public function setEmail($email)
    {
        $this->email = $email;
        return $this;
    }

    /**
     * Get the company name
     *
     * @return string
     */
    public function getCompanyName()
    {
        return $this->companyName;
    }

    /**
     * Set the company name
     *
     * @param string $companyName
     * @return Customer
     */
    public function setCompanyName($companyName)
    {
        $this->companyName = $companyName;
        return $this;
    }

    /**
     * Get the phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->phone;
    }

    /**
     * Set the phone
     *
     * @param string $phone
     * @return Customer
     */
    public function setPhone($phone)
    {
        $this->phone = $phone;
        return $this;
    }

    /**
     * Get the mobile
     *
     * @return string
     */
    public function getMobile()
    {
        return $this->mobile;
    }

    /**
     * Set the mobile
     *
     * @param string $mobile
     * @return Customer
     */
    public function setMobile($mobile)
    {
        $this->mobile = $mobile;
        return $this;
    }

    /**
     * Get the website
     *
     * @return string
     */
    public function getWebsite()
    {
        return $this->website;
    }

    /**
     * Set the website
     *
     * @param string $website
     * @return Customer
     */
    public function setWebsite($website)
    {
        $this->website = $website;
        return $this;
    }

    /**
     * Get the billing address
     *
     * @return Address
     */
    public function getBillingAddress()
    {
        return $this->billingAddress;
    }

    /**
     * Set the billing address
     *
     * @param Address $billingAddress
     * @return Customer
     */
    public function setBillingAddress(Address $billingAddress)
    {
        $this->billingAddress = $billingAddress;
        return $this;
    }

    /**
     * Get the shipping address
     *
     * @return Address
     */
    public function getShippingAddress()
    {
        return $this->shippingAddress;
    }

    /**
     * Set the shipping address
     *
     * @param Address $shippingAddress
     * @return Customer
     */
    public function setShippingAddress(Address $shippingAddress)
    {
        $this->shippingAddress = $shippingAddress;
        return $this;
    }

    /**
     * Get the currency code
     *
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->currencyCode;
    }

    /**
     * Set the currency code
     *
     * @param string $currencyCode
     * @return Customer
     */
    public function setCurrencyCode($currencyCode)
    {
        $this->currencyCode = $currencyCode;
        return $this;
    }

    /**
     * Get the currency symbol
     *
     * @return string
     */
    public function getCurrencySymbol()
    {
        return $this->currencySymbol;
    }

    /**
     * Set the currency symbol
     *
     * @param string $currencySymbol
     * @return Customer
     */
    public function setCurrencySymbol($currencySymbol)
    {
        $this->currencySymbol = $currencySymbol;
        return $this;
    }

    /**
     * Get the currency ID
     *
     * @return string
     */
    public function getCurrencyId()
    {
        return $this->currencyId;
    }

    /**
     * Set the currency ID
     *
     * @param string $currencyId
     * @return Customer
     */
    public function setCurrencyId($currencyId)
    {
        $this->currencyId = $currencyId;
        return $this;
    }

    /**
     * Get the price precision
     *
     * @return int
     */
    public function getPricePrecision()
    {
        return $this->pricePrecision;
    }

    /**
     * Set the price precision
     * @param int $pricePrecision
     * @return Customer
     */
    public function setPricePrecision($pricePrecision)
    {
        $this->pricePrecision = $pricePrecision;
        return $this;
    }

    /**
     * Get the unused credits
     *
     * @return float
     */
    public function getUnusedCredits()
    {
        return $this->unusedCredits;
    }

    /**
     * Set the unused credits
     *
     * @param float $unusedCredits
     * @return Customer
     */
    public function setUnusedCredits($unusedCredits)
    {
        $this->unusedCredits = $unusedCredits;
        return $this;
    }

    /**
     * Get the balance
     *
     * @return float
     */
    public function getBalance()
    {
        return $this->balance;
    }

    /**
     * Set the balance
     *
     * @param float $balance
     * @return Customer
     */
    public function setBalance($balance)
    {
        $this->balance = $balance;
        return $this;
    }

    /**
     * Get the outstanding
     *
     * @return float
     */
    public function getOutstanding()
    {
        return $this->outstanding;
    }

    /**
     * Set the outstanding
     *
     * @param float $outstanding
     * @return Customer
     */
    public function setOutstanding($outstanding)
    {
        $this->outstanding = $outstanding;
        return $this;
    }

    /**
     * Get the notes
     *
     * @return string
     */
    public function getNotes()
    {
        return $this->notes;
    }

    /**
     * Set the notes
     *
     * @param string $notes
     * @return Customer
     */
    public function setNotes($notes)
    {
        $this->notes = $notes;
        return $this;
    }

    /**
     * Get the custom fields
     *
     * @return array
     */
    public function getCustomFields()
    {
        return $this->customFields;
    }

    /**
     * Set the custom fields
     *
     * @param array $customFields
     * @return Customer
     */
    public function setCustomFields(array $customFields)
    {
        $this->customFields = $customFields;
        return $this;
    }

    /**
     * Get the Zoho CRM account ID
     *
     * @return string
     */
    public function getZcrmAccountId()
    {
        return $this->zcrmAccountId;
    }

    /**
     * Set the Zoho CRM account ID
     *
     * @param string $zcrmAccountId
     * @return Customer
     */
    public function setZcrmAccountId($zcrmAccountId)
    {
        $this->zcrmAccountId = $zcrmAccountId;
        return $this;
    }

    /**
     * Get the Zoho CRM contact ID
     *
     * @return string
     */
    public function getZcrmContactId()
    {
        return $this->zcrmContactId;
    }

    /**
     * Set the Zoho CRM contact ID
     *
     * @param string $zcrmContactId
     * @return Customer
     */
    public function setZcrmContactId($zcrmContactId)
    {
        $this->zcrmContactId = $zcrmContactId;
        return $this;
    }
}
